<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.overlord.dtgov</groupId>
  <artifactId>dtgov</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>DesignTime Governance</name>
  <description>DTGov is a Governance Application build on top of a SOA Repository</description>
  <url>http://www.jboss.org/overlord</url>
  <inceptionYear>2013</inceptionYear>

  <organization>
    <name>JBoss, a division of Red Hat</name>
    <url>http://www.jboss.org</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License Version 2.0</name>
      <url>http://repository.jboss.org/licenses/apache-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <issueManagement>
    <system>jira</system>
    <url>https://issues.jboss.org/browse/DTGOV</url>
  </issueManagement>

  <scm>
    <connection>scm:git:git@github.com:Governance/dtgov.git</connection>
    <developerConnection>scm:git:git@github.com:Governance/dtgov.git</developerConnection>
    <url>scm:git:git@github.com:Governance/dtgov.git</url>
  </scm>

  <developers>
    <developer>
      <name>Kurt Stam</name>
      <id>kstam</id>
      <email>kstam@jboss.com</email>
      <organization>JBoss, a division of Red Hat</organization>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Eric Wittmann</name>
      <id>ewittman</id>
      <email>eric.wittmann@redhat.com</email>
      <organization>Red Hat</organization>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>

  <properties>
    <!-- Instruct the build to use only UTF-8 encoding for source code -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

    <!-- Distribution URLs -->
    <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
    <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>

    <!-- Maven plugin versions -->
    <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
    <maven.surefire.plugin.version>2.7.1</maven.surefire.plugin.version>
    <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
    <maven.install.plugin.version>2.3.1</maven.install.plugin.version>
    <maven.javadoc.plugin.version>2.7</maven.javadoc.plugin.version>
    <maven.jxr.plugin.version>2.1</maven.jxr.plugin.version>
    <maven.jar.plugin.version>2.3.1</maven.jar.plugin.version>
    <maven.war.plugin.version>2.1.1</maven.war.plugin.version>
    <maven.bundle.plugin.version>2.1.0</maven.bundle.plugin.version>
    <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
    <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
    <maven.deploy.plugin.version>2.5</maven.deploy.plugin.version>

    <!-- S-RAMP version -->
    <s-ramp.version>0.2.1-SNAPSHOT</s-ramp.version>
    <s-ramp-ui.version>0.2.1-SNAPSHOT</s-ramp-ui.version>

    <!-- Dependency versions -->
    <resteasy.version>2.3.5.Final</resteasy.version>
    <overlord-commons.version>1.0.8-SNAPSHOT</overlord-commons.version>
    <commons-io.version>2.4</commons-io.version>
    <commons-lang3.version>3.1</commons-lang3.version>
    <commons-config.version>1.8</commons-config.version>
    <commons-compress.version>1.4.1</commons-compress.version>
    <commons-codec.version>1.5</commons-codec.version>
    <commons-fileupload.version>1.2.2</commons-fileupload.version>
    <errai.version>2.4.0.Beta1</errai.version>
    <gwt.version>2.5.0</gwt.version>
    <jbpm.version>6.0.0.Beta2</jbpm.version>
    <weld.version>1.1.6.Final</weld.version>
    <mvel.version>2.1.Beta8</mvel.version>
    <jetty.version>6.1.25</jetty.version>
    <uel.impl.version>2.1.2-b04</uel.impl.version>
    <servlet-api.version>2.5</servlet-api.version>
    <jsp-api.version>2.0</jsp-api.version>
    <jboss-ejb3-api.version>3.1.0</jboss-ejb3-api.version>
    <cdi-api.version>1.0-SP4</cdi-api.version>
    <jboss-logging.version>3.0.0.Beta4</jboss-logging.version>
    <joda-time.version>2.1</joda-time.version>
    <junit.version>4.11</junit.version>
    <xmlunit.version>1.3</xmlunit.version>
    <log4j.version>1.2.16</log4j.version>
    <slf4j.version>1.6.1</slf4j.version>
    <slf4j-api.version>1.5.11</slf4j-api.version>
    <slf4j-log4j.version>1.5.11</slf4j-log4j.version>
    <slf4j-nop.version>1.5.11</slf4j-nop.version>
    
  </properties>

  <build>
    <!-- This section defines the default plugin settings inherited by child projects. -->
    <pluginManagement>
      <plugins>
        <!-- Fixes how test resources of a project can be used in projects dependent on it -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>${maven.bundle.plugin.version}</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.3.0,)</versionRange>
                    <goals>
                      <goal>resources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Specify the compiler options and settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <showDeprecation>false</showDeprecation>
          <showWarnings>false</showWarnings>
        </configuration>
      </plugin>
      <!-- Produce source jars during the 'verify' phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*TestCase.java</include>
            <include>**/*Test.java</include>
          </includes>
          <systemProperties>
            <property>
              <name>java.io.tmpdir</name>
              <value>${basedir}/target</value>
            </property>
          </systemProperties>
          <argLine>-Xmx368m -XX:MaxPermSize=128m</argLine>
        </configuration>
      </plugin>
      <!-- Build a test-jar for each project, so that src/test/* resources and classes can be used in other projects. 
        Also customize how the jar files are assembled. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version><!--$NO-MVN-MAN-VER$ -->
        <executions>
          <execution>
            <id>test-jar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-URL>${project.url}</Implementation-URL>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <!-- Common libraries -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>${commons-config.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet-api.version}</version>
      </dependency>
      <!-- Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing) -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j-log4j.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- Testing (note the scope) -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>xmlunit</groupId>
        <artifactId>xmlunit</artifactId>
        <version>${xmlunit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-core</artifactId>
        <version>${tika-core.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.report.plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>

  <repositories>
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>http://repository.jboss.org/nexus/content/groups/developer/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>http://repository.jboss.org/nexus/content/groups/developer/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>jboss-releases-repository</id>
      <name>JBoss Releases Repository</name>
      <url>${jboss.releases.repo.url}</url>
    </repository>
    <snapshotRepository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshots Repository</name>
      <url>${jboss.snapshots.repo.url}</url>
    </snapshotRepository>
  </distributionManagement>

  <!-- modules in alphabetical order -->
  <modules>
    <module>dtgov-task-api</module>
    <module>dtgov-task-client</module>
    <module>dtgov-ui-war</module>
    <module>dtgov-ui-war-jboss7</module>
    <module>dtgov-war</module>
    <module>dtgov-workflows</module>
  </modules>
</project>

